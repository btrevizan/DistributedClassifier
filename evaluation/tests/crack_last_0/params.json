{"voter": {"plurality": "plurality"}, "combiner": {}, "metrics": {"specificity_macro": "src.metrics.specificity_score(average='macro')", "accuracy": "sklearn.metrics.accuracy_score()", "f1_micro": "sklearn.metrics.f1_score(average='micro')", "recall_macro": "sklearn.metrics.recall_score(average='macro')", "recall_micro": "sklearn.metrics.recall_score(average='micro')", "f1_macro": "sklearn.metrics.f1_score(average='macro')", "precision_macro": "sklearn.metrics.precision_score(average='macro')", "precision_micro": "sklearn.metrics.precision_score(average='micro')", "sensitivity_macro": "src.metrics.sensitivity_score(average='macro')", "specificity_micro": "src.metrics.specificity_score(average='micro')", "sensitivity_micro": "src.metrics.sensitivity_score(average='micro')"}, "mathematician": {"max": []}, "iterations": 10, "classifiers": {"gnb": "sklearn.naive_bayes.GaussianNB()", "mlp": "sklearn.neural_network.MLPClassifier()", "knn": "sklearn.neighbors.KNeighborsClassifier()", "svc": "sklearn.svm.SVC(probability=True)", "dtree": "sklearn.tree.DecisionTreeClassifier()"}, "overlap": 0.0, "dataset": "datasets/crack_last.csv", "arbiter": {"classes": [], "methods": {}}, "random_state": 2, "result_path": "tests/crack_last_0", "class_column": -1}